/*
 * ViewQueryReport.java
 *
 * Created on __DATE__, __TIME__
 */

package realestate;

import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;

import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author  __USER__
 */
public class ViewQueryReport extends javax.swing.JFrame {

	/** Creates new form ViewQueryReport */
	public ViewQueryReport() {
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 0));
        jLabel1.setText("View Resources");

        jLabel2.setFont(new java.awt.Font("Century", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 204));
        jLabel2.setText("Selecr Resources");

        jComboBox1.setFont(new java.awt.Font("Century", 1, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(0, 0, 153));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BOOKING", "CONTACTUS ", "POSTREQUIREMENT ", "REGISTER" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 51));
        jLabel3.setText("Order By");

        jComboBox2.setFont(new java.awt.Font("Century", 1, 14)); // NOI18N
        jComboBox2.setForeground(new java.awt.Color(153, 0, 51));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Field" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Century", 1, 14)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(0, 153, 0));
        jCheckBox1.setText("Descending");

        jTable1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jTable1.setToolTipText("Use Print Button to Print the Data");
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        jTable1.setCellSelectionEnabled(true);
        jTable1.setGridColor(new java.awt.Color(255, 51, 51));
        jTable1.setName("ViewDetails"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 153));
        jButton1.setMnemonic('V');
        jButton1.setText("View");
        jButton1.setToolTipText("View Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 153));
        jButton2.setMnemonic('P');
        jButton2.setText("Print");
        jButton2.setToolTipText("Click to print hard Copy");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 153));
        jButton3.setMnemonic('X');
        jButton3.setText("Exit");
        jButton3.setToolTipText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 153));
        jButton4.setMnemonic('V');
        jButton4.setText("BACK TO HOMEPAGE");
        jButton4.setToolTipText("View Details");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1047, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(jLabel2)
                        .add(18, 18, 18)
                        .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 199, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(42, 42, 42)
                        .add(jCheckBox1)
                        .add(288, 288, 288))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(423, 423, 423))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 301, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(325, 325, 325))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jLabel3)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jCheckBox1))
                .add(17, 17, 17)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 353, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .add(jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                        .add(jButton4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // HOME PAGE
      new HomePage();
    }//GEN-LAST:event_jButton4ActionPerformed

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
		// exit code
		this.hide();
	}

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		// Print HARD copy
		try {
			MessageFormat headerFormat = new MessageFormat("Page {0}");
			MessageFormat footerFormat = new MessageFormat("- {0} -");
			jTable1.print(JTable.PrintMode.FIT_WIDTH, headerFormat,
					footerFormat);
		} catch (PrinterException pe) {
			int rr2 = JOptionPane.showConfirmDialog(this, pe.getMessage(),
					"Printing Data", 0, 1);
		}
	}

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		// view table report
		String colname = "", orderdata = "asc";
		if (jCheckBox1.isSelected())
			orderdata = "desc";
		String tbn = jComboBox1.getSelectedItem().toString();

		colname = " order by " + jComboBox2.getSelectedItem() + "  "
				+ orderdata;

		tableData(tbn, colname);
	}

	private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {
		// select Field
		String colname = "", orderdata = "asc";
		if (jCheckBox1.isSelected())
			orderdata = "desc";
		String tbn = jComboBox1.getSelectedItem().toString();

		colname = " order by " + jComboBox2.getSelectedItem() + "  "
				+ orderdata;

		tableData(tbn, colname);
	}

	private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {
		// select table

		loadField();
	}

	private void mySetting() {
		setLocation(
				(Toolkit.getDefaultToolkit().getScreenSize().width - getWidth()) / 2,
				(Toolkit.getDefaultToolkit().getScreenSize().height - getHeight()) / 2);
		setResizable(false);
		setVisible(true);
	}

	private void loadField() {
		String tbn = jComboBox1.getSelectedItem().toString();
		jComboBox2.removeAllItems();
		try {

			Class.forName("com.mysql.jdbc.Driver");  
Connection con=DriverManager.getConnection(  
"jdbc:mysql://localhost:3306/RealEstate","root","123456");  
			Statement st = con.createStatement();
			String stm = "select * from " + tbn;
			ResultSet rs = st.executeQuery(stm);
			ResultSetMetaData rsmd = rs.getMetaData();
			int cco = rsmd.getColumnCount();

			for (int i = 0; i < cco; i++) {
				jComboBox2.addItem(rsmd.getColumnName(i + 1));
			}

			rs.close();
			st.close();
			con.close();

		} catch (Exception ee1) {
			int rr2 = JOptionPane.showConfirmDialog(this, ee1.getMessage(),
					"Find Record ", 0, 1);
		}

	}

	private void tableData(String tabname, String data) {
		try {
			Class.forName("com.mysql.jdbc.Driver");  
Connection con=DriverManager.getConnection(  
"jdbc:mysql://localhost:3306/RealEstate","root","123456");  
			Statement st = con.createStatement();
			Statement st1 = con.createStatement();
			String stm = "select * from " + tabname + " " + data;

			ResultSet rs = st.executeQuery(stm);
			String rst = "select count(*) from " + tabname;

			ResultSet rsx = st1.executeQuery(rst);
			int rowcont = 0;

			String rowco = "";
			if (rsx.next()) {
				rowco = rsx.getString(1);
			}

			rowcont = Integer.parseInt(rowco); ///row count
			ResultSetMetaData rsmd = rs.getMetaData();
			int cco = rsmd.getColumnCount(); //column count

			Object rows[][] = new Object[rowcont + 1][cco];
			Object hader[] = new Object[cco];
			for (int i = 0; i < cco; i++) {
				hader[i] = rsmd.getColumnName(i + 1);
			}
			int recco = 0;
			while (rs.next()) {
				for (int j = 0; j < cco; j++)
					rows[recco][j] = rs.getString(j + 1);
				recco++;

			}
			jTable1.setModel(new javax.swing.table.DefaultTableModel(rows,
					hader));
			st.close();
			con.close();

		} catch (Exception e1) {
			int rr2 = JOptionPane.showConfirmDialog(this, e1.getMessage(),
					"Report ", 0, 1);
		}

	}

	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ViewQueryReport().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}